{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useBaseProps } from 'rc-select';\nimport Tree from 'rc-tree';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport * as React from 'react';\nimport LegacyContext from \"./LegacyContext\";\nimport TreeSelectContext from \"./TreeSelectContext\";\nimport { getAllKeys, isCheckDisabled } from \"./utils/valueUtil\";\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\nvar OptionList = function OptionList(_, ref) {\n  var _useBaseProps = useBaseProps(),\n    prefixCls = _useBaseProps.prefixCls,\n    multiple = _useBaseProps.multiple,\n    searchValue = _useBaseProps.searchValue,\n    toggleOpen = _useBaseProps.toggleOpen,\n    open = _useBaseProps.open,\n    notFoundContent = _useBaseProps.notFoundContent;\n  var _React$useContext = React.useContext(TreeSelectContext),\n    virtual = _React$useContext.virtual,\n    listHeight = _React$useContext.listHeight,\n    listItemHeight = _React$useContext.listItemHeight,\n    listItemScrollOffset = _React$useContext.listItemScrollOffset,\n    treeData = _React$useContext.treeData,\n    fieldNames = _React$useContext.fieldNames,\n    onSelect = _React$useContext.onSelect,\n    dropdownMatchSelectWidth = _React$useContext.dropdownMatchSelectWidth,\n    treeExpandAction = _React$useContext.treeExpandAction,\n    treeTitleRender = _React$useContext.treeTitleRender;\n  var _React$useContext2 = React.useContext(LegacyContext),\n    checkable = _React$useContext2.checkable,\n    checkedKeys = _React$useContext2.checkedKeys,\n    halfCheckedKeys = _React$useContext2.halfCheckedKeys,\n    treeExpandedKeys = _React$useContext2.treeExpandedKeys,\n    treeDefaultExpandAll = _React$useContext2.treeDefaultExpandAll,\n    treeDefaultExpandedKeys = _React$useContext2.treeDefaultExpandedKeys,\n    onTreeExpand = _React$useContext2.onTreeExpand,\n    treeIcon = _React$useContext2.treeIcon,\n    showTreeIcon = _React$useContext2.showTreeIcon,\n    switcherIcon = _React$useContext2.switcherIcon,\n    treeLine = _React$useContext2.treeLine,\n    treeNodeFilterProp = _React$useContext2.treeNodeFilterProp,\n    loadData = _React$useContext2.loadData,\n    treeLoadedKeys = _React$useContext2.treeLoadedKeys,\n    treeMotion = _React$useContext2.treeMotion,\n    onTreeLoad = _React$useContext2.onTreeLoad,\n    keyEntities = _React$useContext2.keyEntities;\n  var treeRef = React.useRef();\n  var memoTreeData = useMemo(function () {\n    return treeData;\n  }, [open, treeData], function (prev, next) {\n    return next[0] && prev[1] !== next[1];\n  });\n\n  // ========================== Active ==========================\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    activeKey = _React$useState2[0],\n    setActiveKey = _React$useState2[1];\n  var activeEntity = keyEntities[activeKey];\n\n  // ========================== Values ==========================\n  var mergedCheckedKeys = React.useMemo(function () {\n    if (!checkable) {\n      return null;\n    }\n    return {\n      checked: checkedKeys,\n      halfChecked: halfCheckedKeys\n    };\n  }, [checkable, checkedKeys, halfCheckedKeys]);\n\n  // ========================== Scroll ==========================\n  React.useEffect(function () {\n    // Single mode should scroll to current key\n    if (open && !multiple && checkedKeys.length) {\n      var _treeRef$current;\n      (_treeRef$current = treeRef.current) === null || _treeRef$current === void 0 || _treeRef$current.scrollTo({\n        key: checkedKeys[0]\n      });\n      setActiveKey(checkedKeys[0]);\n    }\n  }, [open]);\n\n  // ========================== Search ==========================\n  var lowerSearchValue = String(searchValue).toLowerCase();\n  var filterTreeNode = function filterTreeNode(treeNode) {\n    if (!lowerSearchValue) {\n      return false;\n    }\n    return String(treeNode[treeNodeFilterProp]).toLowerCase().includes(lowerSearchValue);\n  };\n\n  // =========================== Keys ===========================\n  var _React$useState3 = React.useState(treeDefaultExpandedKeys),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    expandedKeys = _React$useState4[0],\n    setExpandedKeys = _React$useState4[1];\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    searchExpandedKeys = _React$useState6[0],\n    setSearchExpandedKeys = _React$useState6[1];\n  var mergedExpandedKeys = React.useMemo(function () {\n    if (treeExpandedKeys) {\n      return _toConsumableArray(treeExpandedKeys);\n    }\n    return searchValue ? searchExpandedKeys : expandedKeys;\n  }, [expandedKeys, searchExpandedKeys, treeExpandedKeys, searchValue]);\n  React.useEffect(function () {\n    if (searchValue) {\n      setSearchExpandedKeys(getAllKeys(treeData, fieldNames));\n    }\n  }, [searchValue]);\n  var onInternalExpand = function onInternalExpand(keys) {\n    setExpandedKeys(keys);\n    setSearchExpandedKeys(keys);\n    if (onTreeExpand) {\n      onTreeExpand(keys);\n    }\n  };\n\n  // ========================== Events ==========================\n  var onListMouseDown = function onListMouseDown(event) {\n    event.preventDefault();\n  };\n  var onInternalSelect = function onInternalSelect(__, info) {\n    var node = info.node;\n    if (checkable && isCheckDisabled(node)) {\n      return;\n    }\n    onSelect(node.key, {\n      selected: !checkedKeys.includes(node.key)\n    });\n    if (!multiple) {\n      toggleOpen(false);\n    }\n  };\n\n  // ========================= Keyboard =========================\n  React.useImperativeHandle(ref, function () {\n    var _treeRef$current2;\n    return {\n      scrollTo: (_treeRef$current2 = treeRef.current) === null || _treeRef$current2 === void 0 ? void 0 : _treeRef$current2.scrollTo,\n      onKeyDown: function onKeyDown(event) {\n        var _treeRef$current3;\n        var which = event.which;\n        switch (which) {\n          // >>> Arrow keys\n          case KeyCode.UP:\n          case KeyCode.DOWN:\n          case KeyCode.LEFT:\n          case KeyCode.RIGHT:\n            (_treeRef$current3 = treeRef.current) === null || _treeRef$current3 === void 0 || _treeRef$current3.onKeyDown(event);\n            break;\n\n          // >>> Select item\n          case KeyCode.ENTER:\n            {\n              if (activeEntity) {\n                var _ref = (activeEntity === null || activeEntity === void 0 ? void 0 : activeEntity.node) || {},\n                  selectable = _ref.selectable,\n                  value = _ref.value;\n                if (selectable !== false) {\n                  onInternalSelect(null, {\n                    node: {\n                      key: activeKey\n                    },\n                    selected: !checkedKeys.includes(value)\n                  });\n                }\n              }\n              break;\n            }\n\n          // >>> Close\n          case KeyCode.ESC:\n            {\n              toggleOpen(false);\n            }\n        }\n      },\n      onKeyUp: function onKeyUp() {}\n    };\n  });\n\n  // ========================== Render ==========================\n  if (memoTreeData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      role: \"listbox\",\n      className: \"\".concat(prefixCls, \"-empty\"),\n      onMouseDown: onListMouseDown\n    }, notFoundContent);\n  }\n  var treeProps = {\n    fieldNames: fieldNames\n  };\n  if (treeLoadedKeys) {\n    treeProps.loadedKeys = treeLoadedKeys;\n  }\n  if (mergedExpandedKeys) {\n    treeProps.expandedKeys = mergedExpandedKeys;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onMouseDown: onListMouseDown\n  }, activeEntity && open && /*#__PURE__*/React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, activeEntity.node.value), /*#__PURE__*/React.createElement(Tree, _extends({\n    ref: treeRef,\n    focusable: false,\n    prefixCls: \"\".concat(prefixCls, \"-tree\"),\n    treeData: memoTreeData,\n    height: listHeight,\n    itemHeight: listItemHeight,\n    itemScrollOffset: listItemScrollOffset,\n    virtual: virtual !== false && dropdownMatchSelectWidth !== false,\n    multiple: multiple,\n    icon: treeIcon,\n    showIcon: showTreeIcon,\n    switcherIcon: switcherIcon,\n    showLine: treeLine,\n    loadData: searchValue ? null : loadData,\n    motion: treeMotion,\n    activeKey: activeKey\n    // We handle keys by out instead tree self\n    ,\n\n    checkable: checkable,\n    checkStrictly: true,\n    checkedKeys: mergedCheckedKeys,\n    selectedKeys: !checkable ? checkedKeys : [],\n    defaultExpandAll: treeDefaultExpandAll,\n    titleRender: treeTitleRender\n  }, treeProps, {\n    // Proxy event out\n    onActiveChange: setActiveKey,\n    onSelect: onInternalSelect,\n    onCheck: onInternalSelect,\n    onExpand: onInternalExpand,\n    onLoad: onTreeLoad,\n    filterTreeNode: filterTreeNode,\n    expandAction: treeExpandAction\n  })));\n};\nvar RefOptionList = /*#__PURE__*/React.forwardRef(OptionList);\nif (process.env.NODE_ENV !== 'production') {\n  RefOptionList.displayName = 'OptionList';\n}\nexport default RefOptionList;","map":{"version":3,"names":["_extends","_toConsumableArray","_slicedToArray","useBaseProps","Tree","KeyCode","useMemo","React","LegacyContext","TreeSelectContext","getAllKeys","isCheckDisabled","HIDDEN_STYLE","width","height","display","overflow","opacity","border","padding","margin","OptionList","_","ref","_useBaseProps","prefixCls","multiple","searchValue","toggleOpen","open","notFoundContent","_React$useContext","useContext","virtual","listHeight","listItemHeight","listItemScrollOffset","treeData","fieldNames","onSelect","dropdownMatchSelectWidth","treeExpandAction","treeTitleRender","_React$useContext2","checkable","checkedKeys","halfCheckedKeys","treeExpandedKeys","treeDefaultExpandAll","treeDefaultExpandedKeys","onTreeExpand","treeIcon","showTreeIcon","switcherIcon","treeLine","treeNodeFilterProp","loadData","treeLoadedKeys","treeMotion","onTreeLoad","keyEntities","treeRef","useRef","memoTreeData","prev","next","_React$useState","useState","_React$useState2","activeKey","setActiveKey","activeEntity","mergedCheckedKeys","checked","halfChecked","useEffect","length","_treeRef$current","current","scrollTo","key","lowerSearchValue","String","toLowerCase","filterTreeNode","treeNode","includes","_React$useState3","_React$useState4","expandedKeys","setExpandedKeys","_React$useState5","_React$useState6","searchExpandedKeys","setSearchExpandedKeys","mergedExpandedKeys","onInternalExpand","keys","onListMouseDown","event","preventDefault","onInternalSelect","__","info","node","selected","useImperativeHandle","_treeRef$current2","onKeyDown","_treeRef$current3","which","UP","DOWN","LEFT","RIGHT","ENTER","_ref","selectable","value","ESC","onKeyUp","createElement","role","className","concat","onMouseDown","treeProps","loadedKeys","style","focusable","itemHeight","itemScrollOffset","icon","showIcon","showLine","motion","checkStrictly","selectedKeys","defaultExpandAll","titleRender","onActiveChange","onCheck","onExpand","onLoad","expandAction","RefOptionList","forwardRef","process","env","NODE_ENV","displayName"],"sources":["C:/Users/joaop/Goal-tracking/frontend/node_modules/rc-tree-select/es/OptionList.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useBaseProps } from 'rc-select';\nimport Tree from 'rc-tree';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport * as React from 'react';\nimport LegacyContext from \"./LegacyContext\";\nimport TreeSelectContext from \"./TreeSelectContext\";\nimport { getAllKeys, isCheckDisabled } from \"./utils/valueUtil\";\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\nvar OptionList = function OptionList(_, ref) {\n  var _useBaseProps = useBaseProps(),\n    prefixCls = _useBaseProps.prefixCls,\n    multiple = _useBaseProps.multiple,\n    searchValue = _useBaseProps.searchValue,\n    toggleOpen = _useBaseProps.toggleOpen,\n    open = _useBaseProps.open,\n    notFoundContent = _useBaseProps.notFoundContent;\n  var _React$useContext = React.useContext(TreeSelectContext),\n    virtual = _React$useContext.virtual,\n    listHeight = _React$useContext.listHeight,\n    listItemHeight = _React$useContext.listItemHeight,\n    listItemScrollOffset = _React$useContext.listItemScrollOffset,\n    treeData = _React$useContext.treeData,\n    fieldNames = _React$useContext.fieldNames,\n    onSelect = _React$useContext.onSelect,\n    dropdownMatchSelectWidth = _React$useContext.dropdownMatchSelectWidth,\n    treeExpandAction = _React$useContext.treeExpandAction,\n    treeTitleRender = _React$useContext.treeTitleRender;\n  var _React$useContext2 = React.useContext(LegacyContext),\n    checkable = _React$useContext2.checkable,\n    checkedKeys = _React$useContext2.checkedKeys,\n    halfCheckedKeys = _React$useContext2.halfCheckedKeys,\n    treeExpandedKeys = _React$useContext2.treeExpandedKeys,\n    treeDefaultExpandAll = _React$useContext2.treeDefaultExpandAll,\n    treeDefaultExpandedKeys = _React$useContext2.treeDefaultExpandedKeys,\n    onTreeExpand = _React$useContext2.onTreeExpand,\n    treeIcon = _React$useContext2.treeIcon,\n    showTreeIcon = _React$useContext2.showTreeIcon,\n    switcherIcon = _React$useContext2.switcherIcon,\n    treeLine = _React$useContext2.treeLine,\n    treeNodeFilterProp = _React$useContext2.treeNodeFilterProp,\n    loadData = _React$useContext2.loadData,\n    treeLoadedKeys = _React$useContext2.treeLoadedKeys,\n    treeMotion = _React$useContext2.treeMotion,\n    onTreeLoad = _React$useContext2.onTreeLoad,\n    keyEntities = _React$useContext2.keyEntities;\n  var treeRef = React.useRef();\n  var memoTreeData = useMemo(function () {\n    return treeData;\n  }, [open, treeData], function (prev, next) {\n    return next[0] && prev[1] !== next[1];\n  });\n\n  // ========================== Active ==========================\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    activeKey = _React$useState2[0],\n    setActiveKey = _React$useState2[1];\n  var activeEntity = keyEntities[activeKey];\n\n  // ========================== Values ==========================\n  var mergedCheckedKeys = React.useMemo(function () {\n    if (!checkable) {\n      return null;\n    }\n    return {\n      checked: checkedKeys,\n      halfChecked: halfCheckedKeys\n    };\n  }, [checkable, checkedKeys, halfCheckedKeys]);\n\n  // ========================== Scroll ==========================\n  React.useEffect(function () {\n    // Single mode should scroll to current key\n    if (open && !multiple && checkedKeys.length) {\n      var _treeRef$current;\n      (_treeRef$current = treeRef.current) === null || _treeRef$current === void 0 || _treeRef$current.scrollTo({\n        key: checkedKeys[0]\n      });\n      setActiveKey(checkedKeys[0]);\n    }\n  }, [open]);\n\n  // ========================== Search ==========================\n  var lowerSearchValue = String(searchValue).toLowerCase();\n  var filterTreeNode = function filterTreeNode(treeNode) {\n    if (!lowerSearchValue) {\n      return false;\n    }\n    return String(treeNode[treeNodeFilterProp]).toLowerCase().includes(lowerSearchValue);\n  };\n\n  // =========================== Keys ===========================\n  var _React$useState3 = React.useState(treeDefaultExpandedKeys),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    expandedKeys = _React$useState4[0],\n    setExpandedKeys = _React$useState4[1];\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    searchExpandedKeys = _React$useState6[0],\n    setSearchExpandedKeys = _React$useState6[1];\n  var mergedExpandedKeys = React.useMemo(function () {\n    if (treeExpandedKeys) {\n      return _toConsumableArray(treeExpandedKeys);\n    }\n    return searchValue ? searchExpandedKeys : expandedKeys;\n  }, [expandedKeys, searchExpandedKeys, treeExpandedKeys, searchValue]);\n  React.useEffect(function () {\n    if (searchValue) {\n      setSearchExpandedKeys(getAllKeys(treeData, fieldNames));\n    }\n  }, [searchValue]);\n  var onInternalExpand = function onInternalExpand(keys) {\n    setExpandedKeys(keys);\n    setSearchExpandedKeys(keys);\n    if (onTreeExpand) {\n      onTreeExpand(keys);\n    }\n  };\n\n  // ========================== Events ==========================\n  var onListMouseDown = function onListMouseDown(event) {\n    event.preventDefault();\n  };\n  var onInternalSelect = function onInternalSelect(__, info) {\n    var node = info.node;\n    if (checkable && isCheckDisabled(node)) {\n      return;\n    }\n    onSelect(node.key, {\n      selected: !checkedKeys.includes(node.key)\n    });\n    if (!multiple) {\n      toggleOpen(false);\n    }\n  };\n\n  // ========================= Keyboard =========================\n  React.useImperativeHandle(ref, function () {\n    var _treeRef$current2;\n    return {\n      scrollTo: (_treeRef$current2 = treeRef.current) === null || _treeRef$current2 === void 0 ? void 0 : _treeRef$current2.scrollTo,\n      onKeyDown: function onKeyDown(event) {\n        var _treeRef$current3;\n        var which = event.which;\n        switch (which) {\n          // >>> Arrow keys\n          case KeyCode.UP:\n          case KeyCode.DOWN:\n          case KeyCode.LEFT:\n          case KeyCode.RIGHT:\n            (_treeRef$current3 = treeRef.current) === null || _treeRef$current3 === void 0 || _treeRef$current3.onKeyDown(event);\n            break;\n\n          // >>> Select item\n          case KeyCode.ENTER:\n            {\n              if (activeEntity) {\n                var _ref = (activeEntity === null || activeEntity === void 0 ? void 0 : activeEntity.node) || {},\n                  selectable = _ref.selectable,\n                  value = _ref.value;\n                if (selectable !== false) {\n                  onInternalSelect(null, {\n                    node: {\n                      key: activeKey\n                    },\n                    selected: !checkedKeys.includes(value)\n                  });\n                }\n              }\n              break;\n            }\n\n          // >>> Close\n          case KeyCode.ESC:\n            {\n              toggleOpen(false);\n            }\n        }\n      },\n      onKeyUp: function onKeyUp() {}\n    };\n  });\n\n  // ========================== Render ==========================\n  if (memoTreeData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      role: \"listbox\",\n      className: \"\".concat(prefixCls, \"-empty\"),\n      onMouseDown: onListMouseDown\n    }, notFoundContent);\n  }\n  var treeProps = {\n    fieldNames: fieldNames\n  };\n  if (treeLoadedKeys) {\n    treeProps.loadedKeys = treeLoadedKeys;\n  }\n  if (mergedExpandedKeys) {\n    treeProps.expandedKeys = mergedExpandedKeys;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onMouseDown: onListMouseDown\n  }, activeEntity && open && /*#__PURE__*/React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, activeEntity.node.value), /*#__PURE__*/React.createElement(Tree, _extends({\n    ref: treeRef,\n    focusable: false,\n    prefixCls: \"\".concat(prefixCls, \"-tree\"),\n    treeData: memoTreeData,\n    height: listHeight,\n    itemHeight: listItemHeight,\n    itemScrollOffset: listItemScrollOffset,\n    virtual: virtual !== false && dropdownMatchSelectWidth !== false,\n    multiple: multiple,\n    icon: treeIcon,\n    showIcon: showTreeIcon,\n    switcherIcon: switcherIcon,\n    showLine: treeLine,\n    loadData: searchValue ? null : loadData,\n    motion: treeMotion,\n    activeKey: activeKey\n    // We handle keys by out instead tree self\n    ,\n    checkable: checkable,\n    checkStrictly: true,\n    checkedKeys: mergedCheckedKeys,\n    selectedKeys: !checkable ? checkedKeys : [],\n    defaultExpandAll: treeDefaultExpandAll,\n    titleRender: treeTitleRender\n  }, treeProps, {\n    // Proxy event out\n    onActiveChange: setActiveKey,\n    onSelect: onInternalSelect,\n    onCheck: onInternalSelect,\n    onExpand: onInternalExpand,\n    onLoad: onTreeLoad,\n    filterTreeNode: filterTreeNode,\n    expandAction: treeExpandAction\n  })));\n};\nvar RefOptionList = /*#__PURE__*/React.forwardRef(OptionList);\nif (process.env.NODE_ENV !== 'production') {\n  RefOptionList.displayName = 'OptionList';\n}\nexport default RefOptionList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}