{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { getRowFormat, pickProps, toArray } from \"../utils/miscUtil\";\nimport { fillTimeFormat } from \"./useLocale\";\nfunction checkShow(format, keywords, show) {\n  return show !== null && show !== void 0 ? show : keywords.some(function (keyword) {\n    return format.includes(keyword);\n  });\n}\nvar showTimeKeys = [\n// 'format',\n'showNow', 'showHour', 'showMinute', 'showSecond', 'showMillisecond', 'use12Hours', 'hourStep', 'minuteStep', 'secondStep', 'millisecondStep', 'hideDisabledOptions', 'defaultValue', 'disabledHours', 'disabledMinutes', 'disabledSeconds', 'disabledMilliseconds', 'disabledTime', 'changeOnScroll', 'defaultOpenValue'];\n\n/**\n * Get SharedTimeProps from props.\n */\nfunction pickTimeProps(props) {\n  var timeProps = pickProps(props, showTimeKeys);\n  var format = props.format,\n    picker = props.picker;\n  var propFormat = null;\n  if (format) {\n    propFormat = format;\n    if (Array.isArray(propFormat)) {\n      propFormat = propFormat[0];\n    }\n    propFormat = _typeof(propFormat) === 'object' ? propFormat.format : propFormat;\n  }\n  if (picker === 'time') {\n    timeProps.format = propFormat;\n  }\n  return [timeProps, propFormat];\n}\nfunction isStringFormat(format) {\n  return format && typeof format === 'string';\n}\n/**\n * Get `showHour`, `showMinute`, `showSecond` or other from the props.\n * This is pure function, will not get `showXXX` from the `format` prop.\n */\nexport function getTimeProps(componentProps) {\n  var showTime = componentProps.showTime;\n  var _pickTimeProps = pickTimeProps(componentProps),\n    _pickTimeProps2 = _slicedToArray(_pickTimeProps, 2),\n    pickedProps = _pickTimeProps2[0],\n    propFormat = _pickTimeProps2[1];\n  var showTimeConfig = showTime && _typeof(showTime) === 'object' ? showTime : {};\n  var timeConfig = _objectSpread(_objectSpread({\n    defaultOpenValue: showTimeConfig.defaultOpenValue || showTimeConfig.defaultValue\n  }, pickedProps), showTimeConfig);\n  var showMillisecond = timeConfig.showMillisecond;\n  var showHour = timeConfig.showHour,\n    showMinute = timeConfig.showMinute,\n    showSecond = timeConfig.showSecond;\n  if (!showHour && !showMinute && !showSecond && !showMillisecond) {\n    showHour = true;\n    showMinute = true;\n    showSecond = true;\n  }\n  return [timeConfig, _objectSpread(_objectSpread({}, timeConfig), {}, {\n    showHour: showHour,\n    showMinute: showMinute,\n    showSecond: showSecond,\n    showMillisecond: showMillisecond\n  }), timeConfig.format, propFormat];\n}\nexport function fillShowTimeConfig(picker, showTimeFormat, propFormat, timeConfig, locale) {\n  var isTimePicker = picker === 'time';\n  if (picker === 'datetime' || isTimePicker) {\n    var pickedProps = timeConfig;\n\n    // ====================== BaseFormat ======================\n    var defaultLocaleFormat = getRowFormat(picker, locale, null);\n    var baselineFormat = defaultLocaleFormat;\n    var formatList = [showTimeFormat, propFormat];\n    for (var i = 0; i < formatList.length; i += 1) {\n      var format = toArray(formatList[i])[0];\n      if (isStringFormat(format)) {\n        baselineFormat = format;\n        break;\n      }\n    }\n\n    // ========================= Show =========================\n    var showHour = pickedProps.showHour,\n      showMinute = pickedProps.showMinute,\n      showSecond = pickedProps.showSecond,\n      showMillisecond = pickedProps.showMillisecond;\n    var use12Hours = pickedProps.use12Hours;\n    var showMeridiem = checkShow(baselineFormat, ['a', 'A', 'LT', 'LLL', 'LTS'], use12Hours);\n    var hasShowConfig = [showHour, showMinute, showSecond, showMillisecond].some(function (show) {\n      return show !== undefined;\n    });\n\n    // Fill with format, if needed\n    if (!hasShowConfig) {\n      showHour = checkShow(baselineFormat, ['H', 'h', 'k', 'LT', 'LLL']);\n      showMinute = checkShow(baselineFormat, ['m', 'LT', 'LLL']);\n      showSecond = checkShow(baselineFormat, ['s', 'LTS']);\n      showMillisecond = checkShow(baselineFormat, ['SSS']);\n    }\n\n    // Fallback if all can not see\n    if (!hasShowConfig && !showHour && !showMinute && !showSecond && !showMillisecond) {\n      showHour = true;\n      showMinute = true;\n      showSecond = true;\n    }\n\n    // ======================== Format ========================\n    var timeFormat = showTimeFormat || fillTimeFormat(showHour, showMinute, showSecond, showMillisecond, showMeridiem);\n\n    // ======================== Props =========================\n    return _objectSpread(_objectSpread({}, pickedProps), {}, {\n      // Format\n      format: timeFormat,\n      // Show Config\n      showHour: showHour,\n      showMinute: showMinute,\n      showSecond: showSecond,\n      showMillisecond: showMillisecond,\n      use12Hours: showMeridiem\n    });\n  }\n  return null;\n}","map":{"version":3,"names":["_objectSpread","_slicedToArray","_typeof","getRowFormat","pickProps","toArray","fillTimeFormat","checkShow","format","keywords","show","some","keyword","includes","showTimeKeys","pickTimeProps","props","timeProps","picker","propFormat","Array","isArray","isStringFormat","getTimeProps","componentProps","showTime","_pickTimeProps","_pickTimeProps2","pickedProps","showTimeConfig","timeConfig","defaultOpenValue","defaultValue","showMillisecond","showHour","showMinute","showSecond","fillShowTimeConfig","showTimeFormat","locale","isTimePicker","defaultLocaleFormat","baselineFormat","formatList","i","length","use12Hours","showMeridiem","hasShowConfig","undefined","timeFormat"],"sources":["C:/Users/joaop/Goal-tracking/frontend/node_modules/rc-picker/es/hooks/useTimeConfig.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { getRowFormat, pickProps, toArray } from \"../utils/miscUtil\";\nimport { fillTimeFormat } from \"./useLocale\";\nfunction checkShow(format, keywords, show) {\n  return show !== null && show !== void 0 ? show : keywords.some(function (keyword) {\n    return format.includes(keyword);\n  });\n}\nvar showTimeKeys = [\n// 'format',\n'showNow', 'showHour', 'showMinute', 'showSecond', 'showMillisecond', 'use12Hours', 'hourStep', 'minuteStep', 'secondStep', 'millisecondStep', 'hideDisabledOptions', 'defaultValue', 'disabledHours', 'disabledMinutes', 'disabledSeconds', 'disabledMilliseconds', 'disabledTime', 'changeOnScroll', 'defaultOpenValue'];\n\n/**\n * Get SharedTimeProps from props.\n */\nfunction pickTimeProps(props) {\n  var timeProps = pickProps(props, showTimeKeys);\n  var format = props.format,\n    picker = props.picker;\n  var propFormat = null;\n  if (format) {\n    propFormat = format;\n    if (Array.isArray(propFormat)) {\n      propFormat = propFormat[0];\n    }\n    propFormat = _typeof(propFormat) === 'object' ? propFormat.format : propFormat;\n  }\n  if (picker === 'time') {\n    timeProps.format = propFormat;\n  }\n  return [timeProps, propFormat];\n}\nfunction isStringFormat(format) {\n  return format && typeof format === 'string';\n}\n/**\n * Get `showHour`, `showMinute`, `showSecond` or other from the props.\n * This is pure function, will not get `showXXX` from the `format` prop.\n */\nexport function getTimeProps(componentProps) {\n  var showTime = componentProps.showTime;\n  var _pickTimeProps = pickTimeProps(componentProps),\n    _pickTimeProps2 = _slicedToArray(_pickTimeProps, 2),\n    pickedProps = _pickTimeProps2[0],\n    propFormat = _pickTimeProps2[1];\n  var showTimeConfig = showTime && _typeof(showTime) === 'object' ? showTime : {};\n  var timeConfig = _objectSpread(_objectSpread({\n    defaultOpenValue: showTimeConfig.defaultOpenValue || showTimeConfig.defaultValue\n  }, pickedProps), showTimeConfig);\n  var showMillisecond = timeConfig.showMillisecond;\n  var showHour = timeConfig.showHour,\n    showMinute = timeConfig.showMinute,\n    showSecond = timeConfig.showSecond;\n  if (!showHour && !showMinute && !showSecond && !showMillisecond) {\n    showHour = true;\n    showMinute = true;\n    showSecond = true;\n  }\n  return [timeConfig, _objectSpread(_objectSpread({}, timeConfig), {}, {\n    showHour: showHour,\n    showMinute: showMinute,\n    showSecond: showSecond,\n    showMillisecond: showMillisecond\n  }), timeConfig.format, propFormat];\n}\nexport function fillShowTimeConfig(picker, showTimeFormat, propFormat, timeConfig, locale) {\n  var isTimePicker = picker === 'time';\n  if (picker === 'datetime' || isTimePicker) {\n    var pickedProps = timeConfig;\n\n    // ====================== BaseFormat ======================\n    var defaultLocaleFormat = getRowFormat(picker, locale, null);\n    var baselineFormat = defaultLocaleFormat;\n    var formatList = [showTimeFormat, propFormat];\n    for (var i = 0; i < formatList.length; i += 1) {\n      var format = toArray(formatList[i])[0];\n      if (isStringFormat(format)) {\n        baselineFormat = format;\n        break;\n      }\n    }\n\n    // ========================= Show =========================\n    var showHour = pickedProps.showHour,\n      showMinute = pickedProps.showMinute,\n      showSecond = pickedProps.showSecond,\n      showMillisecond = pickedProps.showMillisecond;\n    var use12Hours = pickedProps.use12Hours;\n    var showMeridiem = checkShow(baselineFormat, ['a', 'A', 'LT', 'LLL', 'LTS'], use12Hours);\n    var hasShowConfig = [showHour, showMinute, showSecond, showMillisecond].some(function (show) {\n      return show !== undefined;\n    });\n\n    // Fill with format, if needed\n    if (!hasShowConfig) {\n      showHour = checkShow(baselineFormat, ['H', 'h', 'k', 'LT', 'LLL']);\n      showMinute = checkShow(baselineFormat, ['m', 'LT', 'LLL']);\n      showSecond = checkShow(baselineFormat, ['s', 'LTS']);\n      showMillisecond = checkShow(baselineFormat, ['SSS']);\n    }\n\n    // Fallback if all can not see\n    if (!hasShowConfig && !showHour && !showMinute && !showSecond && !showMillisecond) {\n      showHour = true;\n      showMinute = true;\n      showSecond = true;\n    }\n\n    // ======================== Format ========================\n    var timeFormat = showTimeFormat || fillTimeFormat(showHour, showMinute, showSecond, showMillisecond, showMeridiem);\n\n    // ======================== Props =========================\n    return _objectSpread(_objectSpread({}, pickedProps), {}, {\n      // Format\n      format: timeFormat,\n      // Show Config\n      showHour: showHour,\n      showMinute: showMinute,\n      showSecond: showSecond,\n      showMillisecond: showMillisecond,\n      use12Hours: showMeridiem\n    });\n  }\n  return null;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}