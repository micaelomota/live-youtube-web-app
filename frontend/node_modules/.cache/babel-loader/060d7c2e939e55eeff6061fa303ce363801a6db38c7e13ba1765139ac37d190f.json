{"ast":null,"code":"import useMemo from \"rc-util/es/hooks/useMemo\";\nimport isEqual from \"rc-util/es/isEqual\";\nimport { defaultConfig } from '../../theme/internal';\nimport useThemeKey from './useThemeKey';\nimport { devUseWarning } from '../../_util/warning';\nexport default function useTheme(theme, parentTheme) {\n  var _a;\n  const warning = devUseWarning('ConfigProvider');\n  const themeConfig = theme || {};\n  const parentThemeConfig = themeConfig.inherit === false || !parentTheme ? defaultConfig : parentTheme;\n  const themeKey = useThemeKey();\n  if (process.env.NODE_ENV !== 'production') {\n    const cssVarEnabled = themeConfig.cssVar || parentThemeConfig.cssVar;\n    const validKey = !!(typeof themeConfig.cssVar === 'object' && ((_a = themeConfig.cssVar) === null || _a === void 0 ? void 0 : _a.key) || themeKey);\n    process.env.NODE_ENV !== \"production\" ? warning(!cssVarEnabled || validKey, 'breaking', 'Missing key in `cssVar` config. Please upgrade to React 18 or set `cssVar.key` manually in each ConfigProvider inside `cssVar` enabled ConfigProvider.') : void 0;\n  }\n  return useMemo(() => {\n    var _a, _b;\n    if (!theme) {\n      return parentTheme;\n    }\n    // Override\n    const mergedComponents = Object.assign({}, parentThemeConfig.components);\n    Object.keys(theme.components || {}).forEach(componentName => {\n      mergedComponents[componentName] = Object.assign(Object.assign({}, mergedComponents[componentName]), theme.components[componentName]);\n    });\n    const cssVarKey = `css-var-${themeKey.replace(/:/g, '')}`;\n    const mergedCssVar = ((_a = themeConfig.cssVar) !== null && _a !== void 0 ? _a : parentThemeConfig.cssVar) && Object.assign(Object.assign(Object.assign({\n      prefix: 'ant'\n    }, typeof parentThemeConfig.cssVar === 'object' ? parentThemeConfig.cssVar : {}), typeof themeConfig.cssVar === 'object' ? themeConfig.cssVar : {}), {\n      key: typeof themeConfig.cssVar === 'object' && ((_b = themeConfig.cssVar) === null || _b === void 0 ? void 0 : _b.key) || cssVarKey\n    });\n    // Base token\n    return Object.assign(Object.assign(Object.assign({}, parentThemeConfig), themeConfig), {\n      token: Object.assign(Object.assign({}, parentThemeConfig.token), themeConfig.token),\n      components: mergedComponents,\n      cssVar: mergedCssVar\n    });\n  }, [themeConfig, parentThemeConfig], (prev, next) => prev.some((prevTheme, index) => {\n    const nextTheme = next[index];\n    return !isEqual(prevTheme, nextTheme, true);\n  }));\n}","map":{"version":3,"names":["useMemo","isEqual","defaultConfig","useThemeKey","devUseWarning","useTheme","theme","parentTheme","_a","warning","themeConfig","parentThemeConfig","inherit","themeKey","process","env","NODE_ENV","cssVarEnabled","cssVar","validKey","key","_b","mergedComponents","Object","assign","components","keys","forEach","componentName","cssVarKey","replace","mergedCssVar","prefix","token","prev","next","some","prevTheme","index","nextTheme"],"sources":["C:/Users/joaop/Goal-tracking/frontend/node_modules/antd/es/config-provider/hooks/useTheme.js"],"sourcesContent":["import useMemo from \"rc-util/es/hooks/useMemo\";\nimport isEqual from \"rc-util/es/isEqual\";\nimport { defaultConfig } from '../../theme/internal';\nimport useThemeKey from './useThemeKey';\nimport { devUseWarning } from '../../_util/warning';\nexport default function useTheme(theme, parentTheme) {\n  var _a;\n  const warning = devUseWarning('ConfigProvider');\n  const themeConfig = theme || {};\n  const parentThemeConfig = themeConfig.inherit === false || !parentTheme ? defaultConfig : parentTheme;\n  const themeKey = useThemeKey();\n  if (process.env.NODE_ENV !== 'production') {\n    const cssVarEnabled = themeConfig.cssVar || parentThemeConfig.cssVar;\n    const validKey = !!(typeof themeConfig.cssVar === 'object' && ((_a = themeConfig.cssVar) === null || _a === void 0 ? void 0 : _a.key) || themeKey);\n    process.env.NODE_ENV !== \"production\" ? warning(!cssVarEnabled || validKey, 'breaking', 'Missing key in `cssVar` config. Please upgrade to React 18 or set `cssVar.key` manually in each ConfigProvider inside `cssVar` enabled ConfigProvider.') : void 0;\n  }\n  return useMemo(() => {\n    var _a, _b;\n    if (!theme) {\n      return parentTheme;\n    }\n    // Override\n    const mergedComponents = Object.assign({}, parentThemeConfig.components);\n    Object.keys(theme.components || {}).forEach(componentName => {\n      mergedComponents[componentName] = Object.assign(Object.assign({}, mergedComponents[componentName]), theme.components[componentName]);\n    });\n    const cssVarKey = `css-var-${themeKey.replace(/:/g, '')}`;\n    const mergedCssVar = ((_a = themeConfig.cssVar) !== null && _a !== void 0 ? _a : parentThemeConfig.cssVar) && Object.assign(Object.assign(Object.assign({\n      prefix: 'ant'\n    }, typeof parentThemeConfig.cssVar === 'object' ? parentThemeConfig.cssVar : {}), typeof themeConfig.cssVar === 'object' ? themeConfig.cssVar : {}), {\n      key: typeof themeConfig.cssVar === 'object' && ((_b = themeConfig.cssVar) === null || _b === void 0 ? void 0 : _b.key) || cssVarKey\n    });\n    // Base token\n    return Object.assign(Object.assign(Object.assign({}, parentThemeConfig), themeConfig), {\n      token: Object.assign(Object.assign({}, parentThemeConfig.token), themeConfig.token),\n      components: mergedComponents,\n      cssVar: mergedCssVar\n    });\n  }, [themeConfig, parentThemeConfig], (prev, next) => prev.some((prevTheme, index) => {\n    const nextTheme = next[index];\n    return !isEqual(prevTheme, nextTheme, true);\n  }));\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}