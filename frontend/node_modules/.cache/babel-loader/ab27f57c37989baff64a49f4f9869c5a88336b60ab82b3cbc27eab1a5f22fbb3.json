{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport omit from \"rc-util/es/omit\";\nimport { useZIndex } from '../_util/hooks/useZIndex';\nimport genPurePanel from '../_util/PurePanel';\nimport { isValidElement } from '../_util/reactNode';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport Select from '../select';\nconst {\n  Option\n} = Select;\nfunction isSelectOptionOrSelectOptGroup(child) {\n  return child && child.type && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\nconst AutoComplete = (props, ref) => {\n  var _a;\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    popupClassName,\n    dropdownClassName,\n    children,\n    dataSource\n  } = props;\n  const childNodes = toArray(children);\n  // ============================= Input =============================\n  let customizeInput;\n  if (childNodes.length === 1 && isValidElement(childNodes[0]) && !isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    [customizeInput] = childNodes;\n  }\n  const getInputElement = customizeInput ? () => customizeInput : undefined;\n  // ============================ Options ============================\n  let optionChildren;\n  // [Legacy] convert `children` or `dataSource` into option children\n  if (childNodes.length && isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    optionChildren = children;\n  } else {\n    optionChildren = dataSource ? dataSource.map(item => {\n      if (isValidElement(item)) {\n        return item;\n      }\n      switch (typeof item) {\n        case 'string':\n          return /*#__PURE__*/React.createElement(Option, {\n            key: item,\n            value: item\n          }, item);\n        case 'object':\n          {\n            const {\n              value: optionValue\n            } = item;\n            return /*#__PURE__*/React.createElement(Option, {\n              key: optionValue,\n              value: optionValue\n            }, item.text);\n          }\n        default:\n          return undefined;\n      }\n    }) : [];\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('AutoComplete');\n    warning.deprecated(!('dataSource' in props), 'dataSource', 'options');\n    process.env.NODE_ENV !== \"production\" ? warning(!customizeInput || !('size' in props), 'usage', 'You need to control style self instead of setting `size` when using customize input.') : void 0;\n    warning.deprecated(!dropdownClassName, 'dropdownClassName', 'popupClassName');\n  }\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('select', customizePrefixCls);\n  // ============================ zIndex ============================\n  const [zIndex] = useZIndex('SelectLike', (_a = props.dropdownStyle) === null || _a === void 0 ? void 0 : _a.zIndex);\n  return /*#__PURE__*/React.createElement(Select, Object.assign({\n    ref: ref,\n    suffixIcon: null\n  }, omit(props, ['dataSource', 'dropdownClassName']), {\n    prefixCls: prefixCls,\n    popupClassName: popupClassName || dropdownClassName,\n    dropdownStyle: Object.assign(Object.assign({}, props.dropdownStyle), {\n      zIndex\n    }),\n    className: classNames(`${prefixCls}-auto-complete`, className),\n    mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE,\n    // Internal api\n    getInputElement\n  }), optionChildren);\n};\nconst RefAutoComplete = /*#__PURE__*/React.forwardRef(AutoComplete);\n// We don't care debug panel\n/* istanbul ignore next */\nconst PurePanel = genPurePanel(RefAutoComplete);\nRefAutoComplete.Option = Option;\nRefAutoComplete._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nif (process.env.NODE_ENV !== 'production') {\n  RefAutoComplete.displayName = 'AutoComplete';\n}\nexport default RefAutoComplete;","map":{"version":3,"names":["React","classNames","toArray","omit","useZIndex","genPurePanel","isValidElement","devUseWarning","ConfigContext","Select","Option","isSelectOptionOrSelectOptGroup","child","type","isSelectOption","isSelectOptGroup","AutoComplete","props","ref","_a","prefixCls","customizePrefixCls","className","popupClassName","dropdownClassName","children","dataSource","childNodes","customizeInput","length","getInputElement","undefined","optionChildren","map","item","createElement","key","value","optionValue","text","process","env","NODE_ENV","warning","deprecated","getPrefixCls","useContext","zIndex","dropdownStyle","Object","assign","suffixIcon","mode","SECRET_COMBOBOX_MODE_DO_NOT_USE","RefAutoComplete","forwardRef","PurePanel","_InternalPanelDoNotUseOrYouWillBeFired","displayName"],"sources":["C:/Users/joaop/Goal-tracking/frontend/node_modules/antd/es/auto-complete/index.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport omit from \"rc-util/es/omit\";\nimport { useZIndex } from '../_util/hooks/useZIndex';\nimport genPurePanel from '../_util/PurePanel';\nimport { isValidElement } from '../_util/reactNode';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport Select from '../select';\nconst {\n  Option\n} = Select;\nfunction isSelectOptionOrSelectOptGroup(child) {\n  return child && child.type && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\nconst AutoComplete = (props, ref) => {\n  var _a;\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    popupClassName,\n    dropdownClassName,\n    children,\n    dataSource\n  } = props;\n  const childNodes = toArray(children);\n  // ============================= Input =============================\n  let customizeInput;\n  if (childNodes.length === 1 && isValidElement(childNodes[0]) && !isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    [customizeInput] = childNodes;\n  }\n  const getInputElement = customizeInput ? () => customizeInput : undefined;\n  // ============================ Options ============================\n  let optionChildren;\n  // [Legacy] convert `children` or `dataSource` into option children\n  if (childNodes.length && isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    optionChildren = children;\n  } else {\n    optionChildren = dataSource ? dataSource.map(item => {\n      if (isValidElement(item)) {\n        return item;\n      }\n      switch (typeof item) {\n        case 'string':\n          return /*#__PURE__*/React.createElement(Option, {\n            key: item,\n            value: item\n          }, item);\n        case 'object':\n          {\n            const {\n              value: optionValue\n            } = item;\n            return /*#__PURE__*/React.createElement(Option, {\n              key: optionValue,\n              value: optionValue\n            }, item.text);\n          }\n        default:\n          return undefined;\n      }\n    }) : [];\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('AutoComplete');\n    warning.deprecated(!('dataSource' in props), 'dataSource', 'options');\n    process.env.NODE_ENV !== \"production\" ? warning(!customizeInput || !('size' in props), 'usage', 'You need to control style self instead of setting `size` when using customize input.') : void 0;\n    warning.deprecated(!dropdownClassName, 'dropdownClassName', 'popupClassName');\n  }\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('select', customizePrefixCls);\n  // ============================ zIndex ============================\n  const [zIndex] = useZIndex('SelectLike', (_a = props.dropdownStyle) === null || _a === void 0 ? void 0 : _a.zIndex);\n  return /*#__PURE__*/React.createElement(Select, Object.assign({\n    ref: ref,\n    suffixIcon: null\n  }, omit(props, ['dataSource', 'dropdownClassName']), {\n    prefixCls: prefixCls,\n    popupClassName: popupClassName || dropdownClassName,\n    dropdownStyle: Object.assign(Object.assign({}, props.dropdownStyle), {\n      zIndex\n    }),\n    className: classNames(`${prefixCls}-auto-complete`, className),\n    mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE,\n    // Internal api\n    getInputElement\n  }), optionChildren);\n};\nconst RefAutoComplete = /*#__PURE__*/React.forwardRef(AutoComplete);\n// We don't care debug panel\n/* istanbul ignore next */\nconst PurePanel = genPurePanel(RefAutoComplete);\nRefAutoComplete.Option = Option;\nRefAutoComplete._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nif (process.env.NODE_ENV !== 'production') {\n  RefAutoComplete.displayName = 'AutoComplete';\n}\nexport default RefAutoComplete;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}