{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { isSame } from \"../../utils/dateUtil\";\n/**\n * RangePicker need additional logic to handle the `disabled` case. e.g.\n * [disabled, enabled] should end date not before start date\n */\nexport default function useRangeDisabledDate(values, disabled, activeIndexList, generateConfig, locale, disabledDate) {\n  var activeIndex = activeIndexList[activeIndexList.length - 1];\n  var firstValuedIndex = activeIndexList.find(function (index) {\n    return values[index];\n  });\n  var rangeDisabledDate = function rangeDisabledDate(date, info) {\n    var _values = _slicedToArray(values, 2),\n      start = _values[0],\n      end = _values[1];\n    var mergedInfo = _objectSpread(_objectSpread({}, info), {}, {\n      from: activeIndex !== firstValuedIndex ? values[firstValuedIndex] : undefined\n    });\n\n    // ============================ Disabled ============================\n    // Should not select days before the start date\n    if (activeIndex === 1 && disabled[0] && start &&\n    // Same date isOK\n    !isSame(generateConfig, locale, start, date, mergedInfo.type) &&\n    // Before start date\n    generateConfig.isAfter(start, date)) {\n      return true;\n    }\n\n    // Should not select days after the end date\n    if (activeIndex === 0 && disabled[1] && end &&\n    // Same date isOK\n    !isSame(generateConfig, locale, end, date, mergedInfo.type) &&\n    // After end date\n    generateConfig.isAfter(date, end)) {\n      return true;\n    }\n\n    // ============================= Origin =============================\n    return disabledDate === null || disabledDate === void 0 ? void 0 : disabledDate(date, mergedInfo);\n  };\n  return rangeDisabledDate;\n}","map":{"version":3,"names":["_objectSpread","_slicedToArray","isSame","useRangeDisabledDate","values","disabled","activeIndexList","generateConfig","locale","disabledDate","activeIndex","length","firstValuedIndex","find","index","rangeDisabledDate","date","info","_values","start","end","mergedInfo","from","undefined","type","isAfter"],"sources":["C:/Users/joaop/Goal-tracking/frontend/node_modules/rc-picker/es/PickerInput/hooks/useRangeDisabledDate.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { isSame } from \"../../utils/dateUtil\";\n/**\n * RangePicker need additional logic to handle the `disabled` case. e.g.\n * [disabled, enabled] should end date not before start date\n */\nexport default function useRangeDisabledDate(values, disabled, activeIndexList, generateConfig, locale, disabledDate) {\n  var activeIndex = activeIndexList[activeIndexList.length - 1];\n  var firstValuedIndex = activeIndexList.find(function (index) {\n    return values[index];\n  });\n  var rangeDisabledDate = function rangeDisabledDate(date, info) {\n    var _values = _slicedToArray(values, 2),\n      start = _values[0],\n      end = _values[1];\n    var mergedInfo = _objectSpread(_objectSpread({}, info), {}, {\n      from: activeIndex !== firstValuedIndex ? values[firstValuedIndex] : undefined\n    });\n\n    // ============================ Disabled ============================\n    // Should not select days before the start date\n    if (activeIndex === 1 && disabled[0] && start &&\n    // Same date isOK\n    !isSame(generateConfig, locale, start, date, mergedInfo.type) &&\n    // Before start date\n    generateConfig.isAfter(start, date)) {\n      return true;\n    }\n\n    // Should not select days after the end date\n    if (activeIndex === 0 && disabled[1] && end &&\n    // Same date isOK\n    !isSame(generateConfig, locale, end, date, mergedInfo.type) &&\n    // After end date\n    generateConfig.isAfter(date, end)) {\n      return true;\n    }\n\n    // ============================= Origin =============================\n    return disabledDate === null || disabledDate === void 0 ? void 0 : disabledDate(date, mergedInfo);\n  };\n  return rangeDisabledDate;\n}"],"mappings":"AAAA,OAAOA,aAAa,MAAM,0CAA0C;AACpE,OAAOC,cAAc,MAAM,0CAA0C;AACrE,SAASC,MAAM,QAAQ,sBAAsB;AAC7C;AACA;AACA;AACA;AACA,eAAe,SAASC,oBAAoBA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,eAAe,EAAEC,cAAc,EAAEC,MAAM,EAAEC,YAAY,EAAE;EACpH,IAAIC,WAAW,GAAGJ,eAAe,CAACA,eAAe,CAACK,MAAM,GAAG,CAAC,CAAC;EAC7D,IAAIC,gBAAgB,GAAGN,eAAe,CAACO,IAAI,CAAC,UAAUC,KAAK,EAAE;IAC3D,OAAOV,MAAM,CAACU,KAAK,CAAC;EACtB,CAAC,CAAC;EACF,IAAIC,iBAAiB,GAAG,SAASA,iBAAiBA,CAACC,IAAI,EAAEC,IAAI,EAAE;IAC7D,IAAIC,OAAO,GAAGjB,cAAc,CAACG,MAAM,EAAE,CAAC,CAAC;MACrCe,KAAK,GAAGD,OAAO,CAAC,CAAC,CAAC;MAClBE,GAAG,GAAGF,OAAO,CAAC,CAAC,CAAC;IAClB,IAAIG,UAAU,GAAGrB,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiB,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE;MAC1DK,IAAI,EAAEZ,WAAW,KAAKE,gBAAgB,GAAGR,MAAM,CAACQ,gBAAgB,CAAC,GAAGW;IACtE,CAAC,CAAC;;IAEF;IACA;IACA,IAAIb,WAAW,KAAK,CAAC,IAAIL,QAAQ,CAAC,CAAC,CAAC,IAAIc,KAAK;IAC7C;IACA,CAACjB,MAAM,CAACK,cAAc,EAAEC,MAAM,EAAEW,KAAK,EAAEH,IAAI,EAAEK,UAAU,CAACG,IAAI,CAAC;IAC7D;IACAjB,cAAc,CAACkB,OAAO,CAACN,KAAK,EAAEH,IAAI,CAAC,EAAE;MACnC,OAAO,IAAI;IACb;;IAEA;IACA,IAAIN,WAAW,KAAK,CAAC,IAAIL,QAAQ,CAAC,CAAC,CAAC,IAAIe,GAAG;IAC3C;IACA,CAAClB,MAAM,CAACK,cAAc,EAAEC,MAAM,EAAEY,GAAG,EAAEJ,IAAI,EAAEK,UAAU,CAACG,IAAI,CAAC;IAC3D;IACAjB,cAAc,CAACkB,OAAO,CAACT,IAAI,EAAEI,GAAG,CAAC,EAAE;MACjC,OAAO,IAAI;IACb;;IAEA;IACA,OAAOX,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACO,IAAI,EAAEK,UAAU,CAAC;EACnG,CAAC;EACD,OAAON,iBAAiB;AAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}