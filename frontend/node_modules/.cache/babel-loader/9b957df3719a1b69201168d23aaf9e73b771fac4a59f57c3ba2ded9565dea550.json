{"ast":null,"code":"var containers = []; // will store container HTMLElement references\nvar styleElements = []; // will store {prepend: HTMLElement, append: HTMLElement}\n\nvar usage = 'insert-css: You need to provide a CSS string. Usage: insertCss(cssString[, options]).';\nfunction insertCss(css, options) {\n  options = options || {};\n  if (css === undefined) {\n    throw new Error(usage);\n  }\n  var position = options.prepend === true ? 'prepend' : 'append';\n  var container = options.container !== undefined ? options.container : document.querySelector('head');\n  var containerId = containers.indexOf(container);\n\n  // first time we see this container, create the necessary entries\n  if (containerId === -1) {\n    containerId = containers.push(container) - 1;\n    styleElements[containerId] = {};\n  }\n\n  // try to get the correponding container + position styleElement, create it otherwise\n  var styleElement;\n  if (styleElements[containerId] !== undefined && styleElements[containerId][position] !== undefined) {\n    styleElement = styleElements[containerId][position];\n  } else {\n    styleElement = styleElements[containerId][position] = createStyleElement();\n    if (position === 'prepend') {\n      container.insertBefore(styleElement, container.childNodes[0]);\n    } else {\n      container.appendChild(styleElement);\n    }\n  }\n\n  // strip potential UTF-8 BOM if css was read from a file\n  if (css.charCodeAt(0) === 0xFEFF) {\n    css = css.substr(1, css.length);\n  }\n\n  // actually add the stylesheet\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText += css;\n  } else {\n    styleElement.textContent += css;\n  }\n  return styleElement;\n}\n;\nfunction createStyleElement() {\n  var styleElement = document.createElement('style');\n  styleElement.setAttribute('type', 'text/css');\n  return styleElement;\n}\nmodule.exports = insertCss;\nmodule.exports.insertCss = insertCss;","map":{"version":3,"names":["containers","styleElements","usage","insertCss","css","options","undefined","Error","position","prepend","container","document","querySelector","containerId","indexOf","push","styleElement","createStyleElement","insertBefore","childNodes","appendChild","charCodeAt","substr","length","styleSheet","cssText","textContent","createElement","setAttribute","module","exports"],"sources":["C:/Users/joaop/Goal-tracking/frontend/node_modules/insert-css/index.js"],"sourcesContent":["var containers = []; // will store container HTMLElement references\nvar styleElements = []; // will store {prepend: HTMLElement, append: HTMLElement}\n\nvar usage = 'insert-css: You need to provide a CSS string. Usage: insertCss(cssString[, options]).';\n\nfunction insertCss(css, options) {\n    options = options || {};\n\n    if (css === undefined) {\n        throw new Error(usage);\n    }\n\n    var position = options.prepend === true ? 'prepend' : 'append';\n    var container = options.container !== undefined ? options.container : document.querySelector('head');\n    var containerId = containers.indexOf(container);\n\n    // first time we see this container, create the necessary entries\n    if (containerId === -1) {\n        containerId = containers.push(container) - 1;\n        styleElements[containerId] = {};\n    }\n\n    // try to get the correponding container + position styleElement, create it otherwise\n    var styleElement;\n\n    if (styleElements[containerId] !== undefined && styleElements[containerId][position] !== undefined) {\n        styleElement = styleElements[containerId][position];\n    } else {\n        styleElement = styleElements[containerId][position] = createStyleElement();\n\n        if (position === 'prepend') {\n            container.insertBefore(styleElement, container.childNodes[0]);\n        } else {\n            container.appendChild(styleElement);\n        }\n    }\n\n    // strip potential UTF-8 BOM if css was read from a file\n    if (css.charCodeAt(0) === 0xFEFF) { css = css.substr(1, css.length); }\n\n    // actually add the stylesheet\n    if (styleElement.styleSheet) {\n        styleElement.styleSheet.cssText += css\n    } else {\n        styleElement.textContent += css;\n    }\n\n    return styleElement;\n};\n\nfunction createStyleElement() {\n    var styleElement = document.createElement('style');\n    styleElement.setAttribute('type', 'text/css');\n    return styleElement;\n}\n\nmodule.exports = insertCss;\nmodule.exports.insertCss = insertCss;\n"],"mappings":"AAAA,IAAIA,UAAU,GAAG,EAAE,CAAC,CAAC;AACrB,IAAIC,aAAa,GAAG,EAAE,CAAC,CAAC;;AAExB,IAAIC,KAAK,GAAG,uFAAuF;AAEnG,SAASC,SAASA,CAACC,GAAG,EAAEC,OAAO,EAAE;EAC7BA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAEvB,IAAID,GAAG,KAAKE,SAAS,EAAE;IACnB,MAAM,IAAIC,KAAK,CAACL,KAAK,CAAC;EAC1B;EAEA,IAAIM,QAAQ,GAAGH,OAAO,CAACI,OAAO,KAAK,IAAI,GAAG,SAAS,GAAG,QAAQ;EAC9D,IAAIC,SAAS,GAAGL,OAAO,CAACK,SAAS,KAAKJ,SAAS,GAAGD,OAAO,CAACK,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;EACpG,IAAIC,WAAW,GAAGb,UAAU,CAACc,OAAO,CAACJ,SAAS,CAAC;;EAE/C;EACA,IAAIG,WAAW,KAAK,CAAC,CAAC,EAAE;IACpBA,WAAW,GAAGb,UAAU,CAACe,IAAI,CAACL,SAAS,CAAC,GAAG,CAAC;IAC5CT,aAAa,CAACY,WAAW,CAAC,GAAG,CAAC,CAAC;EACnC;;EAEA;EACA,IAAIG,YAAY;EAEhB,IAAIf,aAAa,CAACY,WAAW,CAAC,KAAKP,SAAS,IAAIL,aAAa,CAACY,WAAW,CAAC,CAACL,QAAQ,CAAC,KAAKF,SAAS,EAAE;IAChGU,YAAY,GAAGf,aAAa,CAACY,WAAW,CAAC,CAACL,QAAQ,CAAC;EACvD,CAAC,MAAM;IACHQ,YAAY,GAAGf,aAAa,CAACY,WAAW,CAAC,CAACL,QAAQ,CAAC,GAAGS,kBAAkB,CAAC,CAAC;IAE1E,IAAIT,QAAQ,KAAK,SAAS,EAAE;MACxBE,SAAS,CAACQ,YAAY,CAACF,YAAY,EAAEN,SAAS,CAACS,UAAU,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,MAAM;MACHT,SAAS,CAACU,WAAW,CAACJ,YAAY,CAAC;IACvC;EACJ;;EAEA;EACA,IAAIZ,GAAG,CAACiB,UAAU,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;IAAEjB,GAAG,GAAGA,GAAG,CAACkB,MAAM,CAAC,CAAC,EAAElB,GAAG,CAACmB,MAAM,CAAC;EAAE;;EAErE;EACA,IAAIP,YAAY,CAACQ,UAAU,EAAE;IACzBR,YAAY,CAACQ,UAAU,CAACC,OAAO,IAAIrB,GAAG;EAC1C,CAAC,MAAM;IACHY,YAAY,CAACU,WAAW,IAAItB,GAAG;EACnC;EAEA,OAAOY,YAAY;AACvB;AAAC;AAED,SAASC,kBAAkBA,CAAA,EAAG;EAC1B,IAAID,YAAY,GAAGL,QAAQ,CAACgB,aAAa,CAAC,OAAO,CAAC;EAClDX,YAAY,CAACY,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC;EAC7C,OAAOZ,YAAY;AACvB;AAEAa,MAAM,CAACC,OAAO,GAAG3B,SAAS;AAC1B0B,MAAM,CAACC,OAAO,CAAC3B,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}